routine factorial(a: integer): integer is
    if a = 1 then
        return a
    end
    return a * factorial(a - 1)
end

routine main(argc: integer) is
    var n is factorial(5)
    print(n)
end

var k: integer is 10

/*
var a: integer is 5
var a1: integer
var a2 is 5
var b: boolean is false
var b1: boolean
var b2 is false
var c: real is 12.05
var c1: real
var c2 is 12.05
*/

routine factorial(a: integer): integer is
    if a = 1 then
        return a
    end
    return a * factorial(a - 1)
end

routine main(argc: integer) is
/*
    var a: integer is 6
    var a1: integer
    var a2 is 6
    var b: boolean is true
    var b1: boolean
    var b2 is true
    var c: real is 11.09
    var c1: real
    var c2 is 11.91
*/
    //var n is factorial(5)
    //print(n)
    print(true or false)
    print(true and false)
    print((2>3) or (3>5))
    print((2>3) xor (3<5))

    print(true = true)

    print(3 = 7)
    print(3 > 7)
    print(3 < 7)
    print(3 <= 7)
    print(3 >= 7)
    print(3 /= 7)

    print(3.1 = 7)
    print(3.1 > 7)
    print(3.1 < 7)
    print(3.1 <= 7)
    print(3.1 >= 7)
    print(3.1 /= 7)

    print(3 = 7.1)
    print(3 > 7.1)
    print(3 < 7.1)
    print(3 <= 7.1)
    print(3 >= 7.1)
    print(3 /= 7.1)

    print(3.1 = 7.1)
    print(3.1 > 7.1)
    print(3.1 < 7.1)
    print(3.1 <= 7.1)
    print(3.1 >= 7.1)
    print(3.1 /= 7.1)

    /*
    while n /= 1 loop
        if (n % 2) = 0 then
            n := n / 2
        else
            n := (3*n) + 1
        end
        print(n)
    end
    */

    /*print(1.0 - 1.0)
    print(1.0 * 1.0)
    print(1.0 / 1.0)
    print(1.0 % 1.0)
    print(1.0 + 2.0)
    print(1.0 - 2.0)
    print(1.0 * 2.0)
    print(1.0 / 2.0)
    print(1.0 % 2.0)
    print(1.0 + 1)
    print(1.0 - 1)
    print(1.0 * 1)
    print(1.0 / 1)
    print(1.0 % 1)
    print(1.0 + 2)
    print(1.0 - 2)
    print(1.0 * 2)
    print(1.0 / 2)
    print(1.0 % 2)
    print(1.0 + true)
    print(1.0 - true)
    print(1.0 * true)
    print(1.0 / true)
    print(1.0 % true)
    print(2.0 + 1.0)
    print(2.0 - 1.0)
    print(2.0 * 1.0)
    print(2.0 / 1.0)
    print(2.0 % 1.0)
    print(2.0 + 2.0)
    print(2.0 - 2.0)
    print(2.0 * 2.0)
    print(2.0 / 2.0)
    print(2.0 % 2.0)
    print(2.0 + 1)
    print(2.0 - 1)
    print(2.0 * 1)
    print(2.0 / 1)
    print(2.0 % 1)
    print(2.0 + 2)
    print(2.0 - 2)
    print(2.0 * 2)
    print(2.0 / 2)
    print(2.0 % 2)
    print(2.0 + true)
    print(2.0 - true)
    print(2.0 * true)
    print(2.0 / true)
    print(2.0 % true)
    print(1 + 1.0)
    print(1 - 1.0)
    print(1 * 1.0)
    print(1 / 1.0)
    print(1 % 1.0)
    print(1 + 2.0)
    print(1 - 2.0)
    print(1 * 2.0)
    print(1 / 2.0)
    print(1 % 2.0)
    print(1 + 1)
    print(1 - 1)
    print(1 * 1)
    print(1 / 1)
    print(1 % 1)
    print(1 + 2)
    print(1 - 2)
    print(1 * 2)
    print(1 / 2)
    print(1 % 2)
    print(1 + true)
    print(1 - true)
    print(1 * true)
    print(1 / true)
    print(1 % true)
    print(2 + 1.0)
    print(2 - 1.0)
    print(2 * 1.0)
    print(2 / 1.0)
    print(2 % 1.0)
    print(2 + 2.0)
    print(2 - 2.0)
    print(2 * 2.0)
    print(2 / 2.0)
    print(2 % 2.0)
    print(2 + 1)
    print(2 - 1)
    print(2 * 1)
    print(2 / 1)
    print(2 % 1)
    print(2 + 2)
    print(2 - 2)
    print(2 * 2)
    print(2 / 2)
    print(2 % 2)
    print(2 + true)
    print(2 - true)
    print(2 * true)
    print(2 / true)
    print(2 % true)
    print(true + 1.0)
    print(true - 1.0)
    print(true * 1.0)
    print(true / 1.0)
    print(true % 1.0)
    print(true + 2.0)
    print(true - 2.0)
    print(true * 2.0)
    print(true / 2.0)
    print(true % 2.0)
    print(true + 1)
    print(true - 1)
    print(true * 1)
    print(true / 1)
    print(true % 1)
    print(true + 2)
    print(true - 2)
    print(true * 2)
    print(true / 2)
    print(true % 2)
    print(true + true)
    print(true - true)
    print(true * true)
    print(true / true)
    print(true % true)*/

end

var k: integer is 10