/*
    Merge Sort Sorting Algorithm.
*/
routine merge(left: array[10] integer, right: array[10] integer): array[20] integer is
    var result : array[left.length + right.length] integer
    var i is 1
    var j is 1
    while i < left.length + 1 and j < right.length + 1 loop
        if left[i] < right[j] then 
            result[i+j-1] := left[i]
            i := i + 1;
        else
            result[i+j-1] := right[j]
            j := j + 1
        end
    end

    if i = left.length + 1 then
        result[result.length] := right[j]
    else
        result[result.length] := left[i]
    end
    return result
end


routine merge_sort(arr: array[10] integer): array[20] integer is
    var half is arr.length / 2
    var left : array[half] integer
    var right : array[arr.length - half] integer
    for i in 1 .. half loop
        left[i] := arr[i]
        right[i] := arr[half + i]
    end
    right[arr.length - half] := arr[arr.length]
    right := merge_sort(right)
    left := merge_sort(left)
    var result is merge(left, right)
    return result
end

routine main(argc: integer, argv: array[10] integer) is
    var a: array[7] integer

    a[1]:=3
    a[2]:=1
    a[3]:=4
    a[4]:=5
    a[5]:=7
    a[6]:=2
    a[7]:=6
        

    print(merge_sort(a)) // should print 1 2 3 4 5 6 7
end
