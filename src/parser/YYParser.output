Terminals unused in grammar

    TRUE
    FALSE
    RECORD
    ARRAY
    WHILE
    LOOP
    FOR
    IN
    REVERSE
    IF
    THEN
    ELSE
    AND
    OR
    NOT
    XOR
    PRINT
    RETURN
    NEWLINE
    LBRACKET
    RBRACKET
    DOT
    RANGE
    EQUALS
    ASSIGN
    NEQUALS
    GREATER
    LESS
    LEQUALS
    GEQUALS


Grammar

    0 $accept: Program $end

    1 Program: GlobalDeclarations

    2 GlobalDeclarations: %empty
    3                   | GlobalDeclaration GlobalDeclarations

    4 GlobalDeclaration: SimpleDeclaration
    5                  | RoutineDeclaration

    6 SimpleDeclaration: VariableDeclaration
    7                  | TypeDeclaration

    8 VariableDeclaration: VAR Identifier COLON Type OptionalSemicolon
    9                    | VAR Identifier COLON Type IS Expression OptionalSemicolon
   10                    | VAR Identifier IS Expression OptionalSemicolon

   11 TypeDeclaration: TYPE Identifier IS Type OptionalSemicolon

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body END
   13                   | ROUTINE Identifier LPAREN Parameters RPAREN IS Body END

   14 Parameters: ParameterDeclaration
   15           | ParameterDeclaration COMMA Parameters

   16 ParameterDeclaration: Identifier COLON Type

   17 Body: %empty
   18     | BodyDeclaration Body

   19 BodyDeclaration: SimpleDeclaration

   20 Expression: INTEGER_LITERAL
   21           | REAL_LITERAL
   22           | Expression PLUS Expression
   23           | Expression MINUS Expression
   24           | Expression MULTIPLY Expression
   25           | Expression DIVIDE Expression
   26           | Expression REMAINDER Expression

   27 OptionalSemicolon: %empty
   28                  | SEMICOLON

   29 Type: PrimitiveType
   30     | Identifier

   31 PrimitiveType: INTEGER
   32              | REAL
   33              | BOOLEAN

   34 Identifier: IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <Identifier> (258) 34
    INTEGER_LITERAL <IntegerLiteral> (259) 20
    REAL_LITERAL <RealLiteral> (260) 21
    TRUE (261)
    FALSE (262)
    VAR (263) 8 9 10
    TYPE (264) 11
    IS (265) 9 10 11 12 13
    END (266) 12 13
    RECORD (267)
    INTEGER (268) 31
    REAL (269) 32
    BOOLEAN (270) 33
    ARRAY (271)
    WHILE (272)
    LOOP (273)
    FOR (274)
    IN (275)
    REVERSE (276)
    IF (277)
    THEN (278)
    ELSE (279)
    ROUTINE (280) 12 13
    AND (281)
    OR (282)
    NOT (283)
    XOR (284)
    PRINT (285)
    RETURN (286)
    NEWLINE (287)
    SEMICOLON (288) 28
    LPAREN (289) 12 13
    RPAREN (290) 12 13
    LBRACKET (291)
    RBRACKET (292)
    COMMA (293) 15
    DOT (294)
    COLON (295) 8 9 12 16
    RANGE (296)
    EQUALS (297)
    ASSIGN (298)
    NEQUALS (299)
    GREATER (300)
    LESS (301)
    LEQUALS (302)
    GEQUALS (303)
    PLUS (304) 22
    MINUS (305) 23
    MULTIPLY (306) 24
    DIVIDE (307) 25
    REMAINDER (308) 26


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    Program <Declarations> (55)
        on left: 1
        on right: 0
    GlobalDeclarations <Declarations> (56)
        on left: 2 3
        on right: 1 3
    GlobalDeclaration <IDeclaration> (57)
        on left: 4 5
        on right: 3
    SimpleDeclaration <IDeclaration> (58)
        on left: 6 7
        on right: 4 19
    VariableDeclaration <VariableDeclaration> (59)
        on left: 8 9 10
        on right: 6
    TypeDeclaration <TypeDeclaration> (60)
        on left: 11
        on right: 7
    RoutineDeclaration <RoutineDeclaration> (61)
        on left: 12 13
        on right: 5
    Parameters <Parameters> (62)
        on left: 14 15
        on right: 12 13 15
    ParameterDeclaration <Parameter> (63)
        on left: 16
        on right: 14 15
    Body <Body> (64)
        on left: 17 18
        on right: 12 13 18
    BodyDeclaration <IStatement> (65)
        on left: 19
        on right: 18
    Expression <IExpression> (66)
        on left: 20 21 22 23 24 25 26
        on right: 9 10 22 23 24 25 26
    OptionalSemicolon (67)
        on left: 27 28
        on right: 8 9 10 11
    Type <IType> (68)
        on left: 29 30
        on right: 8 9 11 12 16
    PrimitiveType <PrimitiveType> (69)
        on left: 31 32 33
        on right: 29
    Identifier <Identifier> (70)
        on left: 34
        on right: 8 9 10 11 12 13 16 30


State 0

    0 $accept: • Program $end

    VAR      shift, and go to state 1
    TYPE     shift, and go to state 2
    ROUTINE  shift, and go to state 3

    $default  reduce using rule 2 (GlobalDeclarations)

    Program              go to state 4
    GlobalDeclarations   go to state 5
    GlobalDeclaration    go to state 6
    SimpleDeclaration    go to state 7
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    RoutineDeclaration   go to state 10


State 1

    8 VariableDeclaration: VAR • Identifier COLON Type OptionalSemicolon
    9                    | VAR • Identifier COLON Type IS Expression OptionalSemicolon
   10                    | VAR • Identifier IS Expression OptionalSemicolon

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 12


State 2

   11 TypeDeclaration: TYPE • Identifier IS Type OptionalSemicolon

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 13


State 3

   12 RoutineDeclaration: ROUTINE • Identifier LPAREN Parameters RPAREN COLON Type IS Body END
   13                   | ROUTINE • Identifier LPAREN Parameters RPAREN IS Body END

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 14


State 4

    0 $accept: Program • $end

    $end  shift, and go to state 15


State 5

    1 Program: GlobalDeclarations •

    $default  reduce using rule 1 (Program)


State 6

    3 GlobalDeclarations: GlobalDeclaration • GlobalDeclarations

    VAR      shift, and go to state 1
    TYPE     shift, and go to state 2
    ROUTINE  shift, and go to state 3

    $default  reduce using rule 2 (GlobalDeclarations)

    GlobalDeclarations   go to state 16
    GlobalDeclaration    go to state 6
    SimpleDeclaration    go to state 7
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    RoutineDeclaration   go to state 10


State 7

    4 GlobalDeclaration: SimpleDeclaration •

    $default  reduce using rule 4 (GlobalDeclaration)


State 8

    6 SimpleDeclaration: VariableDeclaration •

    $default  reduce using rule 6 (SimpleDeclaration)


State 9

    7 SimpleDeclaration: TypeDeclaration •

    $default  reduce using rule 7 (SimpleDeclaration)


State 10

    5 GlobalDeclaration: RoutineDeclaration •

    $default  reduce using rule 5 (GlobalDeclaration)


State 11

   34 Identifier: IDENTIFIER •

    $default  reduce using rule 34 (Identifier)


State 12

    8 VariableDeclaration: VAR Identifier • COLON Type OptionalSemicolon
    9                    | VAR Identifier • COLON Type IS Expression OptionalSemicolon
   10                    | VAR Identifier • IS Expression OptionalSemicolon

    IS     shift, and go to state 17
    COLON  shift, and go to state 18


State 13

   11 TypeDeclaration: TYPE Identifier • IS Type OptionalSemicolon

    IS  shift, and go to state 19


State 14

   12 RoutineDeclaration: ROUTINE Identifier • LPAREN Parameters RPAREN COLON Type IS Body END
   13                   | ROUTINE Identifier • LPAREN Parameters RPAREN IS Body END

    LPAREN  shift, and go to state 20


State 15

    0 $accept: Program $end •

    $default  accept


State 16

    3 GlobalDeclarations: GlobalDeclaration GlobalDeclarations •

    $default  reduce using rule 3 (GlobalDeclarations)


State 17

   10 VariableDeclaration: VAR Identifier IS • Expression OptionalSemicolon

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 23


State 18

    8 VariableDeclaration: VAR Identifier COLON • Type OptionalSemicolon
    9                    | VAR Identifier COLON • Type IS Expression OptionalSemicolon

    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 24
    REAL        shift, and go to state 25
    BOOLEAN     shift, and go to state 26

    Type           go to state 27
    PrimitiveType  go to state 28
    Identifier     go to state 29


State 19

   11 TypeDeclaration: TYPE Identifier IS • Type OptionalSemicolon

    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 24
    REAL        shift, and go to state 25
    BOOLEAN     shift, and go to state 26

    Type           go to state 30
    PrimitiveType  go to state 28
    Identifier     go to state 29


State 20

   12 RoutineDeclaration: ROUTINE Identifier LPAREN • Parameters RPAREN COLON Type IS Body END
   13                   | ROUTINE Identifier LPAREN • Parameters RPAREN IS Body END

    IDENTIFIER  shift, and go to state 11

    Parameters            go to state 31
    ParameterDeclaration  go to state 32
    Identifier            go to state 33


State 21

   20 Expression: INTEGER_LITERAL •

    $default  reduce using rule 20 (Expression)


State 22

   21 Expression: REAL_LITERAL •

    $default  reduce using rule 21 (Expression)


State 23

   10 VariableDeclaration: VAR Identifier IS Expression • OptionalSemicolon
   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    MULTIPLY   shift, and go to state 37
    DIVIDE     shift, and go to state 38
    REMAINDER  shift, and go to state 39

    $default  reduce using rule 27 (OptionalSemicolon)

    OptionalSemicolon  go to state 40


State 24

   31 PrimitiveType: INTEGER •

    $default  reduce using rule 31 (PrimitiveType)


State 25

   32 PrimitiveType: REAL •

    $default  reduce using rule 32 (PrimitiveType)


State 26

   33 PrimitiveType: BOOLEAN •

    $default  reduce using rule 33 (PrimitiveType)


State 27

    8 VariableDeclaration: VAR Identifier COLON Type • OptionalSemicolon
    9                    | VAR Identifier COLON Type • IS Expression OptionalSemicolon

    IS         shift, and go to state 41
    SEMICOLON  shift, and go to state 34

    $default  reduce using rule 27 (OptionalSemicolon)

    OptionalSemicolon  go to state 42


State 28

   29 Type: PrimitiveType •

    $default  reduce using rule 29 (Type)


State 29

   30 Type: Identifier •

    $default  reduce using rule 30 (Type)


State 30

   11 TypeDeclaration: TYPE Identifier IS Type • OptionalSemicolon

    SEMICOLON  shift, and go to state 34

    $default  reduce using rule 27 (OptionalSemicolon)

    OptionalSemicolon  go to state 43


State 31

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters • RPAREN COLON Type IS Body END
   13                   | ROUTINE Identifier LPAREN Parameters • RPAREN IS Body END

    RPAREN  shift, and go to state 44


State 32

   14 Parameters: ParameterDeclaration •
   15           | ParameterDeclaration • COMMA Parameters

    COMMA  shift, and go to state 45

    $default  reduce using rule 14 (Parameters)


State 33

   16 ParameterDeclaration: Identifier • COLON Type

    COLON  shift, and go to state 46


State 34

   28 OptionalSemicolon: SEMICOLON •

    $default  reduce using rule 28 (OptionalSemicolon)


State 35

   22 Expression: Expression PLUS • Expression

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 47


State 36

   23 Expression: Expression MINUS • Expression

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 48


State 37

   24 Expression: Expression MULTIPLY • Expression

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 49


State 38

   25 Expression: Expression DIVIDE • Expression

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 50


State 39

   26 Expression: Expression REMAINDER • Expression

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 51


State 40

   10 VariableDeclaration: VAR Identifier IS Expression OptionalSemicolon •

    $default  reduce using rule 10 (VariableDeclaration)


State 41

    9 VariableDeclaration: VAR Identifier COLON Type IS • Expression OptionalSemicolon

    INTEGER_LITERAL  shift, and go to state 21
    REAL_LITERAL     shift, and go to state 22

    Expression  go to state 52


State 42

    8 VariableDeclaration: VAR Identifier COLON Type OptionalSemicolon •

    $default  reduce using rule 8 (VariableDeclaration)


State 43

   11 TypeDeclaration: TYPE Identifier IS Type OptionalSemicolon •

    $default  reduce using rule 11 (TypeDeclaration)


State 44

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN • COLON Type IS Body END
   13                   | ROUTINE Identifier LPAREN Parameters RPAREN • IS Body END

    IS     shift, and go to state 53
    COLON  shift, and go to state 54


State 45

   15 Parameters: ParameterDeclaration COMMA • Parameters

    IDENTIFIER  shift, and go to state 11

    Parameters            go to state 55
    ParameterDeclaration  go to state 32
    Identifier            go to state 33


State 46

   16 ParameterDeclaration: Identifier COLON • Type

    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 24
    REAL        shift, and go to state 25
    BOOLEAN     shift, and go to state 26

    Type           go to state 56
    PrimitiveType  go to state 28
    Identifier     go to state 29


State 47

   22 Expression: Expression • PLUS Expression
   22           | Expression PLUS Expression •
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression

    MULTIPLY   shift, and go to state 37
    DIVIDE     shift, and go to state 38
    REMAINDER  shift, and go to state 39

    $default  reduce using rule 22 (Expression)


State 48

   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   23           | Expression MINUS Expression •
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression

    MULTIPLY   shift, and go to state 37
    DIVIDE     shift, and go to state 38
    REMAINDER  shift, and go to state 39

    $default  reduce using rule 23 (Expression)


State 49

   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   24           | Expression MULTIPLY Expression •
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression

    $default  reduce using rule 24 (Expression)


State 50

   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   25           | Expression DIVIDE Expression •
   26           | Expression • REMAINDER Expression

    $default  reduce using rule 25 (Expression)


State 51

   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression
   26           | Expression REMAINDER Expression •

    $default  reduce using rule 26 (Expression)


State 52

    9 VariableDeclaration: VAR Identifier COLON Type IS Expression • OptionalSemicolon
   22 Expression: Expression • PLUS Expression
   23           | Expression • MINUS Expression
   24           | Expression • MULTIPLY Expression
   25           | Expression • DIVIDE Expression
   26           | Expression • REMAINDER Expression

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    MULTIPLY   shift, and go to state 37
    DIVIDE     shift, and go to state 38
    REMAINDER  shift, and go to state 39

    $default  reduce using rule 27 (OptionalSemicolon)

    OptionalSemicolon  go to state 57


State 53

   13 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS • Body END

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 17 (Body)

    SimpleDeclaration    go to state 58
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 59
    BodyDeclaration      go to state 60


State 54

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON • Type IS Body END

    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 24
    REAL        shift, and go to state 25
    BOOLEAN     shift, and go to state 26

    Type           go to state 61
    PrimitiveType  go to state 28
    Identifier     go to state 29


State 55

   15 Parameters: ParameterDeclaration COMMA Parameters •

    $default  reduce using rule 15 (Parameters)


State 56

   16 ParameterDeclaration: Identifier COLON Type •

    $default  reduce using rule 16 (ParameterDeclaration)


State 57

    9 VariableDeclaration: VAR Identifier COLON Type IS Expression OptionalSemicolon •

    $default  reduce using rule 9 (VariableDeclaration)


State 58

   19 BodyDeclaration: SimpleDeclaration •

    $default  reduce using rule 19 (BodyDeclaration)


State 59

   13 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS Body • END

    END  shift, and go to state 62


State 60

   18 Body: BodyDeclaration • Body

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 17 (Body)

    SimpleDeclaration    go to state 58
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 63
    BodyDeclaration      go to state 60


State 61

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type • IS Body END

    IS  shift, and go to state 64


State 62

   13 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS Body END •

    $default  reduce using rule 13 (RoutineDeclaration)


State 63

   18 Body: BodyDeclaration Body •

    $default  reduce using rule 18 (Body)


State 64

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS • Body END

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 17 (Body)

    SimpleDeclaration    go to state 58
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 65
    BodyDeclaration      go to state 60


State 65

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body • END

    END  shift, and go to state 66


State 66

   12 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body END •

    $default  reduce using rule 12 (RoutineDeclaration)
