Terminals unused in grammar

    INTEGER_LITERAL
    REAL_LITERAL
    TRUE
    FALSE
    RECORD
    ARRAY
    WHILE
    LOOP
    FOR
    IN
    REVERSE
    IF
    THEN
    ELSE
    AND
    OR
    NOT
    XOR
    PRINT
    RETURN
    NEWLINE
    LBRACKET
    RBRACKET
    DOT
    RANGE
    EQUALS
    ASSIGN
    NEQUALS
    GREATER
    LESS
    LEQUALS
    GEQUALS
    PLUS
    MINUS
    MULTIPLY
    DIVIDE
    REMAINDER


Grammar

    0 $accept: Program $end

    1 Program: GlobalDeclarations

    2 GlobalDeclarations: %empty
    3                   | GlobalDeclaration GlobalDeclarations

    4 GlobalDeclaration: SimpleDeclaration
    5                  | RoutineDeclaration

    6 SimpleDeclaration: VariableDeclaration
    7                  | TypeDeclaration

    8 VariableDeclaration: VAR Identifier COLON Type OptionalSemicolon

    9 TypeDeclaration: TYPE Identifier IS Type OptionalSemicolon

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body END
   11                   | ROUTINE Identifier LPAREN Parameters RPAREN IS Body END

   12 Parameters: ParameterDeclaration
   13           | ParameterDeclaration COMMA Parameters

   14 ParameterDeclaration: Identifier COLON Type

   15 Body: %empty
   16     | BodyDeclaration Body

   17 BodyDeclaration: SimpleDeclaration

   18 OptionalSemicolon: %empty
   19                  | SEMICOLON

   20 Type: PrimitiveType

   21 PrimitiveType: INTEGER
   22              | REAL
   23              | BOOLEAN

   24 Identifier: IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <Identifier> (258) 24
    INTEGER_LITERAL (259)
    REAL_LITERAL (260)
    TRUE (261)
    FALSE (262)
    VAR (263) 8
    TYPE (264) 9
    IS (265) 9 10 11
    END (266) 10 11
    RECORD (267)
    INTEGER (268) 21
    REAL (269) 22
    BOOLEAN (270) 23
    ARRAY (271)
    WHILE (272)
    LOOP (273)
    FOR (274)
    IN (275)
    REVERSE (276)
    IF (277)
    THEN (278)
    ELSE (279)
    ROUTINE (280) 10 11
    AND (281)
    OR (282)
    NOT (283)
    XOR (284)
    PRINT (285)
    RETURN (286)
    NEWLINE (287)
    SEMICOLON (288) 19
    LPAREN (289) 10 11
    RPAREN (290) 10 11
    LBRACKET (291)
    RBRACKET (292)
    COMMA (293) 13
    DOT (294)
    COLON (295) 8 10 14
    RANGE (296)
    EQUALS (297)
    ASSIGN (298)
    NEQUALS (299)
    GREATER (300)
    LESS (301)
    LEQUALS (302)
    GEQUALS (303)
    PLUS (304)
    MINUS (305)
    MULTIPLY (306)
    DIVIDE (307)
    REMAINDER (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    Program <Declarations> (55)
        on left: 1
        on right: 0
    GlobalDeclarations <Declarations> (56)
        on left: 2 3
        on right: 1 3
    GlobalDeclaration <IDeclaration> (57)
        on left: 4 5
        on right: 3
    SimpleDeclaration <IDeclaration> (58)
        on left: 6 7
        on right: 4 17
    VariableDeclaration <VariableDeclaration> (59)
        on left: 8
        on right: 6
    TypeDeclaration <TypeDeclaration> (60)
        on left: 9
        on right: 7
    RoutineDeclaration <RoutineDeclaration> (61)
        on left: 10 11
        on right: 5
    Parameters <Parameters> (62)
        on left: 12 13
        on right: 10 11 13
    ParameterDeclaration <Parameter> (63)
        on left: 14
        on right: 12 13
    Body <Body> (64)
        on left: 15 16
        on right: 10 11 16
    BodyDeclaration <IStatement> (65)
        on left: 17
        on right: 16
    OptionalSemicolon (66)
        on left: 18 19
        on right: 8 9
    Type <IType> (67)
        on left: 20
        on right: 8 9 10 14
    PrimitiveType <PrimitiveType> (68)
        on left: 21 22 23
        on right: 20
    Identifier <Identifier> (69)
        on left: 24
        on right: 8 9 10 11 14


State 0

    0 $accept: • Program $end

    VAR      shift, and go to state 1
    TYPE     shift, and go to state 2
    ROUTINE  shift, and go to state 3

    $default  reduce using rule 2 (GlobalDeclarations)

    Program              go to state 4
    GlobalDeclarations   go to state 5
    GlobalDeclaration    go to state 6
    SimpleDeclaration    go to state 7
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    RoutineDeclaration   go to state 10


State 1

    8 VariableDeclaration: VAR • Identifier COLON Type OptionalSemicolon

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 12


State 2

    9 TypeDeclaration: TYPE • Identifier IS Type OptionalSemicolon

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 13


State 3

   10 RoutineDeclaration: ROUTINE • Identifier LPAREN Parameters RPAREN COLON Type IS Body END
   11                   | ROUTINE • Identifier LPAREN Parameters RPAREN IS Body END

    IDENTIFIER  shift, and go to state 11

    Identifier  go to state 14


State 4

    0 $accept: Program • $end

    $end  shift, and go to state 15


State 5

    1 Program: GlobalDeclarations •

    $default  reduce using rule 1 (Program)


State 6

    3 GlobalDeclarations: GlobalDeclaration • GlobalDeclarations

    VAR      shift, and go to state 1
    TYPE     shift, and go to state 2
    ROUTINE  shift, and go to state 3

    $default  reduce using rule 2 (GlobalDeclarations)

    GlobalDeclarations   go to state 16
    GlobalDeclaration    go to state 6
    SimpleDeclaration    go to state 7
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    RoutineDeclaration   go to state 10


State 7

    4 GlobalDeclaration: SimpleDeclaration •

    $default  reduce using rule 4 (GlobalDeclaration)


State 8

    6 SimpleDeclaration: VariableDeclaration •

    $default  reduce using rule 6 (SimpleDeclaration)


State 9

    7 SimpleDeclaration: TypeDeclaration •

    $default  reduce using rule 7 (SimpleDeclaration)


State 10

    5 GlobalDeclaration: RoutineDeclaration •

    $default  reduce using rule 5 (GlobalDeclaration)


State 11

   24 Identifier: IDENTIFIER •

    $default  reduce using rule 24 (Identifier)


State 12

    8 VariableDeclaration: VAR Identifier • COLON Type OptionalSemicolon

    COLON  shift, and go to state 17


State 13

    9 TypeDeclaration: TYPE Identifier • IS Type OptionalSemicolon

    IS  shift, and go to state 18


State 14

   10 RoutineDeclaration: ROUTINE Identifier • LPAREN Parameters RPAREN COLON Type IS Body END
   11                   | ROUTINE Identifier • LPAREN Parameters RPAREN IS Body END

    LPAREN  shift, and go to state 19


State 15

    0 $accept: Program $end •

    $default  accept


State 16

    3 GlobalDeclarations: GlobalDeclaration GlobalDeclarations •

    $default  reduce using rule 3 (GlobalDeclarations)


State 17

    8 VariableDeclaration: VAR Identifier COLON • Type OptionalSemicolon

    INTEGER  shift, and go to state 20
    REAL     shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    Type           go to state 23
    PrimitiveType  go to state 24


State 18

    9 TypeDeclaration: TYPE Identifier IS • Type OptionalSemicolon

    INTEGER  shift, and go to state 20
    REAL     shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    Type           go to state 25
    PrimitiveType  go to state 24


State 19

   10 RoutineDeclaration: ROUTINE Identifier LPAREN • Parameters RPAREN COLON Type IS Body END
   11                   | ROUTINE Identifier LPAREN • Parameters RPAREN IS Body END

    IDENTIFIER  shift, and go to state 11

    Parameters            go to state 26
    ParameterDeclaration  go to state 27
    Identifier            go to state 28


State 20

   21 PrimitiveType: INTEGER •

    $default  reduce using rule 21 (PrimitiveType)


State 21

   22 PrimitiveType: REAL •

    $default  reduce using rule 22 (PrimitiveType)


State 22

   23 PrimitiveType: BOOLEAN •

    $default  reduce using rule 23 (PrimitiveType)


State 23

    8 VariableDeclaration: VAR Identifier COLON Type • OptionalSemicolon

    SEMICOLON  shift, and go to state 29

    $default  reduce using rule 18 (OptionalSemicolon)

    OptionalSemicolon  go to state 30


State 24

   20 Type: PrimitiveType •

    $default  reduce using rule 20 (Type)


State 25

    9 TypeDeclaration: TYPE Identifier IS Type • OptionalSemicolon

    SEMICOLON  shift, and go to state 29

    $default  reduce using rule 18 (OptionalSemicolon)

    OptionalSemicolon  go to state 31


State 26

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters • RPAREN COLON Type IS Body END
   11                   | ROUTINE Identifier LPAREN Parameters • RPAREN IS Body END

    RPAREN  shift, and go to state 32


State 27

   12 Parameters: ParameterDeclaration •
   13           | ParameterDeclaration • COMMA Parameters

    COMMA  shift, and go to state 33

    $default  reduce using rule 12 (Parameters)


State 28

   14 ParameterDeclaration: Identifier • COLON Type

    COLON  shift, and go to state 34


State 29

   19 OptionalSemicolon: SEMICOLON •

    $default  reduce using rule 19 (OptionalSemicolon)


State 30

    8 VariableDeclaration: VAR Identifier COLON Type OptionalSemicolon •

    $default  reduce using rule 8 (VariableDeclaration)


State 31

    9 TypeDeclaration: TYPE Identifier IS Type OptionalSemicolon •

    $default  reduce using rule 9 (TypeDeclaration)


State 32

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN • COLON Type IS Body END
   11                   | ROUTINE Identifier LPAREN Parameters RPAREN • IS Body END

    IS     shift, and go to state 35
    COLON  shift, and go to state 36


State 33

   13 Parameters: ParameterDeclaration COMMA • Parameters

    IDENTIFIER  shift, and go to state 11

    Parameters            go to state 37
    ParameterDeclaration  go to state 27
    Identifier            go to state 28


State 34

   14 ParameterDeclaration: Identifier COLON • Type

    INTEGER  shift, and go to state 20
    REAL     shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    Type           go to state 38
    PrimitiveType  go to state 24


State 35

   11 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS • Body END

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 15 (Body)

    SimpleDeclaration    go to state 39
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 40
    BodyDeclaration      go to state 41


State 36

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON • Type IS Body END

    INTEGER  shift, and go to state 20
    REAL     shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    Type           go to state 42
    PrimitiveType  go to state 24


State 37

   13 Parameters: ParameterDeclaration COMMA Parameters •

    $default  reduce using rule 13 (Parameters)


State 38

   14 ParameterDeclaration: Identifier COLON Type •

    $default  reduce using rule 14 (ParameterDeclaration)


State 39

   17 BodyDeclaration: SimpleDeclaration •

    $default  reduce using rule 17 (BodyDeclaration)


State 40

   11 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS Body • END

    END  shift, and go to state 43


State 41

   16 Body: BodyDeclaration • Body

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 15 (Body)

    SimpleDeclaration    go to state 39
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 44
    BodyDeclaration      go to state 41


State 42

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type • IS Body END

    IS  shift, and go to state 45


State 43

   11 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN IS Body END •

    $default  reduce using rule 11 (RoutineDeclaration)


State 44

   16 Body: BodyDeclaration Body •

    $default  reduce using rule 16 (Body)


State 45

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS • Body END

    VAR   shift, and go to state 1
    TYPE  shift, and go to state 2

    $default  reduce using rule 15 (Body)

    SimpleDeclaration    go to state 39
    VariableDeclaration  go to state 8
    TypeDeclaration      go to state 9
    Body                 go to state 46
    BodyDeclaration      go to state 41


State 46

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body • END

    END  shift, and go to state 47


State 47

   10 RoutineDeclaration: ROUTINE Identifier LPAREN Parameters RPAREN COLON Type IS Body END •

    $default  reduce using rule 10 (RoutineDeclaration)
